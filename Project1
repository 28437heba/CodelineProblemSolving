problem1
import tkinter as tk
from tkinter import messagebox
import re

def validate_username(username):
    if not username:
        return "Username should not be empty."
    if len(username) > 50:
        return "Username should not exceed 50 characters."
    return None

def validate_password(password):
    if len(password) < 8:
        return "Password must be at least 8 characters long."
    if not re.search(r"[!@#$%^&*(),.?\":{}|<>]", password):
        return "Password should contain at least one special symbol."
    if not re.search(r"\d", password):
        return "Password should have one or more numbers."
    if not re.search(r"[A-Z]", password) or not re.search(r"[a-z]", password):
        return "Password should have one or more uppercase and lowercase characters."
    return None

def validate_email(email):
    email_regex = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    if not re.match(email_regex, email):
        return "Invalid email address."
    return None

def validate_fields():
    user
problem2
def decimal_to_binary(decimal_number):
    if decimal_number == 0:
        return "0"
    
    binary_number = ""
    
    while decimal_number > 0:
        remainder = decimal_number % 2
        binary_number = str(remainder) + binary_number
        decimal_number = decimal_number // 2
    
    return binary_number

# Get user input
decimal_number = int(input("Enter a positive decimal number: "))

# Validate the input
if decimal_number < 0:
    print("Please enter a positive number.")
else:
    # Convert to binary and print the result
    binary_number = decimal_to_binary(decimal_number)
    print(f"The binary equivalent of {decimal_number} is {binary_number}.")
problem 3
def display_right_angle_triangle(n):
    for i in range(1, n + 1):
        print("1 " * i)

def display_palindromic_triangle(n):
    for i in range(1, n + 1):
        left_side = "".join(str(j) for j in range(1, i + 1))
        right_side = left_side[::-1][1:]
        print(left_side + right_side)

def show_help():
    print("\nHelp Menu:")
    print("1. Display a right-angle triangle of ones:")
    print("   - This option displays a right-angle triangle where each row consists of '1's.")
    print("   - The number of rows is based on the user's input.")
    print("2. Display a Palindromic Triangle:")
    print("   - This option displays a triangle with palindromic patterns of numbers.")
    print("   - The number of rows is based on the user's input.")
    print("3. Help:")
    print("   - This option displays information about the different menu options.")
    print("4. Exit:")
    print("   - This option exits the program.\n")

def main():
    while True:
        print("\nMenu:")
        print("1. Display

problem4
def list_of_squares_of_even_numbers(numbers):
    return [x**2 for x in numbers if x % 2 == 0]

def slice_list(numbers, start, end):
    return numbers[start:end]

def main():
    # Get the list of integers from the user
    input_list = input("Enter the list of integers (comma separated): ")
    numbers = list(map(int, input_list.split(',')))

    # Create the list of squares of even numbers
    even_squares = list_of_squares_of_even_numbers(numbers)
    print("List of squares of even numbers:", even_squares)

    # Get the start and end indices for slicing
    start = int(input("Enter the start index for slicing: "))
    end = int(input("Enter the end index for slicing: "))

    # Slice the list
    sublist = slice_list(numbers, start, end)
    print("Sliced list:", sublist)

if _name_ == "_main_":
    main()
